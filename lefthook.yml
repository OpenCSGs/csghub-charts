# lefthook.yml - Helm Charts Pre-commit Hooks Configuration
# 在项目根目录下保存此文件，然后运行: lefthook install
pre-commit:
  parallel: true
  commands:
    # 检查 Helm chart 语法和结构
    helm-lint:
      run: |
        echo "🔍 Running Helm lint..."
        if ! helm lint charts/csghub; then
          echo "❌ Helm lint failed for charts"
        fi
        
        echo "✅ Helm lint passed"

    # 检查 Helm 模板渲染
    helm-template:
      run: |
        echo "🔍 Running Helm template dry-run..."
        
        # 使用默认值进行模板渲染测试
        if ! helm template test-release charts/csghub --dry-run > /dev/null 2>&1; then
          echo "❌ Template rendering failed"
          helm template test-release charts/csghub --dry-run
        fi
        
        echo "✅ Helm template rendering passed"

    # 运行 Helm unittest
    helm-unittest:
      run: |
        echo "🔍 Running Helm unittest..."
        
        # 检查是否安装了 helm unittest 插件
        if ! helm plugin list | grep -q unittest; then
          echo "❌ Helm unittest plugin not installed. Install with:"
          echo "   helm plugin install https://github.com/helm-unittest/helm-unittest"
          exit 1
        fi
        
        # 运行单元测试
        if ! helm unittest charts/csghub; then
          echo "❌ Helm unittest failed"
          exit 1
        fi
        echo "✅ Helm unittest passed"

# 提交信息检查
commit-msg:
  commands:
    conventional-commit:
      run: |
        echo "🔍 Checking commit message format..."
        commit_msg=$(cat {1})
        
        # 检查 Conventional Commits 格式 - 使用 grep 替代 bash 正则表达式
        if ! echo "$commit_msg" | grep -qE "^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+"; then
          echo "❌ Commit message should follow Conventional Commits format:"
          echo "   feat: add new feature"
          echo "   fix: fix bug"
          echo "   docs: update documentation"
          echo "   style: formatting changes"
          echo "   refactor: code refactoring"
          echo "   test: add tests"
          echo "   chore: maintenance tasks"
          exit 1
        fi
        echo "✅ Commit message format is valid"
        