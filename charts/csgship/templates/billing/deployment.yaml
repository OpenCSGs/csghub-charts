{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/ -}}

{{- $service := include "common.service" (dict "service" "billing" "global" .) | fromYaml }}
{{- if ($service.enabled | default false) }}
{{- $webSvc := include "common.service" (dict "service" "web" "global" .) | fromYaml }}
{{- $serviceName := include "common.names.custom" (list . $service.name) }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/service: {{ $service.name }}
    {{- if $service.labels }}
      {{- toYaml $service.labels | nindent 4 }}
    {{- else }}
      {{- include "common.labels" . | nindent 4 }}
    {{- end }}
  annotations:
    reloader.stakater.com/auto: "true"
    {{- if $service.annotations }}
      {{- toYaml $service.annotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ $service.replicas | default 1 }}
  minReadySeconds: {{ $service.minReadySeconds | default 30 }}
  selector:
    matchLabels:
      app.kubernetes.io/service: {{ $service.name }}
      {{- if $service.selector }}
        {{- toYaml $service.selector | nindent 6 }}
      {{- else }}
        {{- include "common.labels.selector" . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/service: {{ $service.name }}
        {{- if $service.podLabels }}
          {{- toYaml $service.podLabels | nindent 8 }}
        {{- else }}
          {{- include "common.labels" . | nindent 8 }}
        {{- end }}
      annotations:
      {{- if $service.podAnnotations }}
        {{- toYaml $service.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ $service.terminationGracePeriodSeconds | default 20 }}
      {{- if $service.serviceAccountName }}
      serviceAccountName: {{ $service.serviceAccountName }}
      automountServiceAccountToken: {{ $service.automountServiceAccountToken | default true }}
      {{- end }}
      {{- $billingImage := include "csgship.service.image" (dict "service" $service "context" .) | fromYaml }}
      {{- with (or $billingImage.pullSecrets .Values.global.image.pullSecrets) }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ $service.name }}
          image: {{ include "common.image" (list . $billingImage) }}
          imagePullPolicy: {{ or $billingImage.pullPolicy .Values.global.image.pullPolicy }}
          command:
            - "/bin/sh"
            - "-c"
            - |
              sh /tmp/config.sh && \
              /app/billing -config=/app/config/config.yaml
          ports:
            - containerPort: 8080
              name: {{ dig "service" "name" $service.name $service }}
              protocol: {{ dig "service" "protocol" "TCP" $service }}
          envFrom:
            - configMapRef:
                name: {{ $serviceName }}
            - configMapRef:
                name: {{ include "common.names.custom" (list . $webSvc.name) }}
          {{- with $service.environments }}
          env:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if $service.resources }}
          resources:
            {{- toYaml $service.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /tmp
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- if $service.readinessProbe }}
          readinessProbe:
            {{- toYaml $service.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $service.startupProbe }}
          startupProbe:
            {{- toYaml $service.startupProbe | nindent 12 }}
          {{- end }}
          {{- if $service.securityContext }}
          securityContext:
            {{- toYaml $service.securityContext | nindent 12 }}
          {{- end }}
          {{- if $service.lifecycle }}
          lifecycle:
            {{- toYaml $service.lifecycle | nindent 12 }}
          {{- end }}
          {{- if $service.stdin }}
          stdin: {{ $service.stdin }}
          {{- end }}
          {{- if $service.tty }}
          tty: {{ $service.tty }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ $serviceName }}
      {{- if $service.nodeSelector }}
      nodeSelector:
        {{- toYaml $service.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $service.tolerations }}
      tolerations:
        {{- toYaml $service.tolerations | nindent 8 }}
      {{- end }}
      {{- if $service.affinity }}
      affinity:
        {{- toYaml $service.affinity | nindent 8 }}
      {{- end }}
      {{- if $service.podSecurityContext }}
      securityContext:
        {{- toYaml $service.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if $service.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml $service.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      {{- if $service.hostname }}
      hostname: {{ $service.hostname }}
      {{- end }}
      {{- if $service.subdomain }}
      subdomain: {{ $service.subdomain }}
      {{- end }}
  {{- if $service.strategy }}
  strategy:
    {{- toYaml $service.strategy | nindent 4 }}
  {{- end }}
  {{- if $service.revisionHistoryLimit }}
  revisionHistoryLimit: {{ $service.revisionHistoryLimit }}
  {{- end }}
  progressDeadlineSeconds: {{ $service.progressDeadlineSeconds | default 600 }}
{{- end }}