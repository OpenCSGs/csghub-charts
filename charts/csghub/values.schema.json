{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "CSGHub Helm Values",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "description": "Global configuration will override subChart's configuration",
      "properties": {
        "edition": {
          "type": "string",
          "description": "Deployment edition: \"ce\" (Community) or \"ee\" (Enterprise)",
          "enum": ["ce", "ee", "saas"],
          "default": "ee"
        },
        "image": {
          "type": "object",
          "properties": {
            "registry": {
              "type": "string",
              "description": "Image registry path (without trailing slash)"
            },
            "tag": {
              "type": "string",
              "description": "Image tag format: {{ tag }}-{{ edition }} (e.g., v1.8.1-ee)",
              "default": "v1.10.0"
            },
            "pullPolicy": {
              "type": "string",
              "description": "Kubernetes image pull policy",
              "enum": ["Always", "IfNotPresent", "Never"],
              "default": "IfNotPresent"
            },
            "pullSecrets": {
              "type": "array",
              "description": "List of Kubernetes secret names for private registry access",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "pdb": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "description": "Whether to create PodDisruptionBudget",
              "default": false
            },
            "minAvailable": {
              "type": "integer",
              "description": "Minimum available pods for PodDisruptionBudget",
              "minimum": 1,
              "default": 1
            },
            "maxUnavailable": {
              "type": "integer",
              "description": "Maximum number of unavailable pods",
              "minimum": 0
            }
          }
        },
        "ingress": {
          "type": "object",
          "properties": {
            "className": {
              "type": "string",
              "description": "Ingress class name (e.g., nginx, traefik)"
            },
            "domain": {
              "type": "string",
              "description": "Domain name for accessing csghub",
              "default": "example.com"
            },
            "customDomainPrefixes": {
              "type": "object",
              "description": "Subdomain prefix configuration"
            },
            "useTop": {
              "type": "boolean",
              "description": "Whether to use the top-level domain directly for access",
              "default": false
            },
            "tls": {
              "type": "object",
              "description": "TLS/SSL configuration",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "secretName": {
                  "type": "string",
                  "description": "Kubernetes secret name for TLS certificate"
                }
              }
            },
            "service": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Service type for ingress",
                  "enum": ["LoadBalancer", "NodePort"],
                  "default": "LoadBalancer"
                }
              }
            }
          }
        },
        "registry": {
          "type": "object",
          "description": "Container registry configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable internal Registry deployment",
              "default": true
            },
            "insecure": {
              "type": "boolean",
              "description": "Allow insecure registry connections",
              "default": false
            }
          }
        },
        "postgresql": {
          "type": "object",
          "description": "PostgreSQL database configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable internal PostgreSQL deployment",
              "default": true
            },
            "user": {
              "type": "string",
              "description": "Database username",
              "default": "csghub"
            },
            "timezone": {
              "type": "string",
              "description": "Database timezone",
              "default": "Etc/UTC"
            }
          }
        },
        "redis": {
          "type": "object",
          "description": "Redis configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable internal Redis deployment",
              "default": true
            }
          }
        },
        "objectStore": {
          "type": "object",
          "description": "Object storage configuration (e.g. S3/MinIO)",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable internal object storage",
              "default": true
            },
            "region": {
              "type": "string",
              "description": "Storage region",
              "default": "cn-north-1"
            },
            "encrypt": {
              "type": "boolean",
              "description": "Enable server-side encryption",
              "default": false
            },
            "secure": {
              "type": "boolean",
              "description": "Use HTTPS connection",
              "default": false
            },
            "pathStyle": {
              "type": "boolean",
              "description": "Use path-style access",
              "default": true
            }
          }
        },
        "gitaly": {
          "type": "object",
          "description": "Gitaly (Git storage) configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable internal Gitaly deployment",
              "default": true
            },
            "isCluster": {
              "type": "boolean",
              "description": "Enable Gitaly cluster (EE only)",
              "default": false
            },
            "storage": {
              "type": "string",
              "description": "Storage name",
              "default": "default"
            }
          }
        },
        "moderation": {
          "type": "object",
          "description": "Content moderation configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable content moderation",
              "default": false
            }
          }
        },
        "namespace": {
          "type": "string",
          "description": "Namespace for deployment",
          "default": "spaces"
        },
        "autoConfigure": {
          "type": "boolean",
          "description": "Auto-install knative and argo",
          "default": true
        },
        "mergingNamespace": {
          "type": "string",
          "description": "Namespace merging strategy",
          "enum": ["Multi", "Single", "Disable"],
          "default": "Disable"
        },
        "knative": {
          "type": "object",
          "description": "Knative serving configuration",
          "properties": {
            "serving": {
              "type": "object",
              "properties": {
                "services": {
                  "type": "array",
                  "description": "List of Knative services",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Service type",
                        "enum": ["LoadBalancer", "NodePort"],
                        "default": "NodePort"
                      },
                      "domain": {
                        "type": "string",
                        "description": "Internal domain for service access",
                        "default": "app.internal"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "pipIndexUrl": {
          "type": "string",
          "description": "Custom pip repository URL",
          "default": "https://pypi.tuna.tsinghua.edu.cn/simple/"
        },
        "usePublicDomain": {
          "type": "boolean",
          "description": "Use public domain for deployments",
          "default": true
        },
        "chartContext": {
          "type": "object",
          "properties": {
            "isRoot": {
              "type": "boolean",
              "description": "Clearly identify the running mode, root means running as a subchart",
              "default": true
            }
          }
        },
        "persistence": {
          "type": "object",
          "description": "Persistent storage configuration"
        },
        "csgship": {
          "type": "object",
          "description": "Csgship OAuth configuration",
          "properties": {
            "oauth": {
              "type": "object"
            }
          }
        },
        "dataflow": {
          "type": "object",
          "description": "Dataflow service configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable Dataflow service",
              "default": false
            }
          }
        }
      }
    },
    "autoscaling": {
      "type": "object",
      "description": "Autoscaling configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "minReplicas": {
          "type": "integer",
          "description": "Minimum replica count",
          "minimum": 1,
          "default": 1
        },
        "maxReplicas": {
          "type": "integer",
          "description": "Maximum replica count",
          "minimum": 1,
          "default": 10
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "description": "Target CPU utilization percentage",
          "minimum": 1,
          "maximum": 100,
          "default": 80
        },
        "targetMemoryUtilizationPercentage": {
          "type": "integer",
          "description": "Target memory utilization percentage",
          "minimum": 1,
          "maximum": 100,
          "default": 80
        }
      }
    },
    "server": {
      "type": "object",
      "description": "CSGHub server configuration",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "registry": {
              "type": "string",
              "default": "docker.io"
            },
            "repository": {
              "type": "string",
              "description": "Image repository path",
              "default": "opencsghq/csghub-server"
            },
            "pullPolicy": {
              "type": "string",
              "description": "Image pull policy",
              "enum": ["Always", "IfNotPresent", "Never"],
              "default": "IfNotPresent"
            },
            "pullSecrets": {
              "type": "array",
              "description": "Pull secrets for private registry",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "serviceAccount": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "default": false
            },
            "automount": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "postgresql": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string",
              "description": "Database username",
              "default": "csghub"
            },
            "database": {
              "type": "string",
              "description": "Database name",
              "default": "csghub_server"
            },
            "timezone": {
              "type": "string",
              "description": "Database timezone",
              "default": "Etc/UTC"
            }
          }
        },
        "redis": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer",
              "description": "Redis port",
              "minimum": 1024,
              "maximum": 65535,
              "default": 6379
            }
          }
        },
        "gitaly": {
          "type": "object",
          "properties": {
            "storage": {
              "type": "string",
              "description": "Storage name",
              "default": "default"
            }
          }
        },
        "objectStore": {
          "type": "object",
          "properties": {
            "accessKey": {
              "type": "string",
              "description": "Access key",
              "default": "minio"
            },
            "bucket": {
              "type": "string",
              "description": "Bucket name",
              "default": "csghub-server"
            },
            "region": {
              "type": "string",
              "description": "Storage region",
              "default": "cn-north-1"
            },
            "encrypt": {
              "type": "boolean",
              "description": "Enable server-side encryption",
              "default": false
            },
            "secure": {
              "type": "boolean",
              "description": "Use HTTPS connection",
              "default": true
            },
            "pathStyle": {
              "type": "boolean",
              "description": "Use path-style access",
              "default": true
            },
            "directUpload": {
              "type": "boolean",
              "description": "Enable direct upload",
              "default": false
            }
          }
        },
        "gitlabShell": {
          "type": "object"
        },
        "multiSync": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable multi-sync",
              "default": true
            }
          }
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "default": "100m"
                },
                "memory": {
                  "type": "string",
                  "default": "128Mi"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "default": "100m"
                },
                "memory": {
                  "type": "string",
                  "default": "128Mi"
                }
              }
            }
          }
        }
      }
    },
    "portal": {
      "type": "object",
      "description": "Portal service configuration",
      "properties": {
        "image": {
          "type": "object",
          "description": "Portal image configuration",
          "properties": {
            "pullSecrets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "registry": {
              "type": "string",
              "default": "docker.io"
            },
            "repository": {
              "type": "string",
              "default": "opencsghq/csghub-portal"
            },
            "pullPolicy": {
              "type": "string",
              "description": "Image pull policy",
              "enum": ["Always", "IfNotPresent", "Never"],
              "default": "IfNotPresent"
            }
          }
        },
        "ingress": {
          "type": "object",
          "description": "Portal ingress configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable ingress",
              "default": true
            },
            "tls": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable TLS",
                  "default": false
                }
              }
            }
          }
        },
        "postgresql": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string",
              "description": "Database username",
              "default": "csghub"
            },
            "database": {
              "type": "string",
              "description": "Database name",
              "default": "csghub_portal"
            },
            "timezone": {
              "type": "string",
              "description": "Database timezone",
              "default": "Etc/UTC"
            }
          }
        },
        "objectStore": {
          "type": "object",
          "properties": {
            "accessKey": {
              "type": "string",
              "description": "Access key",
              "default": "minio"
            },
            "bucket": {
              "type": "string",
              "description": "Bucket name",
              "default": "csghub-portal-public"
            },
            "region": {
              "type": "string",
              "description": "Storage region",
              "default": "cn-north-1"
            },
            "encrypt": {
              "type": "boolean",
              "description": "Enable server-side encryption",
              "default": false
            },
            "secure": {
              "type": "boolean",
              "description": "Use HTTPS connection",
              "default": true
            },
            "pathStyle": {
              "type": "boolean",
              "description": "Use path-style access",
              "default": true
            }
          }
        },
        "additionalObjectStore": {
          "type": "object",
          "description": "Additional storage configuration",
          "properties": {
            "bucket": {
              "type": "string",
              "default": "csghub-portal"
            }
          }
        },
        "serviceAccount": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "default": false
            },
            "automount": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "notification": {
      "type": "object",
      "description": "Notification service configuration",
      "properties": {
        "repoSyncTime": {
          "type": "string",
          "description": "Repository synchronization timezone",
          "default": "Asia/Shanghai"
        },
        "broadcastUserPageSize": {
          "type": "integer",
          "description": "User pagination size for broadcasts",
          "minimum": 1,
          "default": 100
        },
        "broadcastEmailPageSize": {
          "type": "integer",
          "description": "Email pagination size for broadcasts",
          "minimum": 1,
          "default": 100
        }
      }
    },
    "csgship": {
      "type": "object",
      "description": "Csgship service configuration (Enterprise only)",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Csgship service",
          "default": false
        },
        "web": {
          "type": "object",
          "properties": {
            "persistence": {
              "type": "object",
              "description": "Persistence configuration",
              "properties": {
                "accessMode": {
                  "type": "array",
                  "description": "Access modes for persistent volume",
                  "items": {
                    "type": "string",
                    "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany"]
                  }
                }
              }
            }
          }
        }
      }
    },
    "dataflow": {
      "type": "object",
      "description": "Dataflow service configuration",
      "properties": {
        "openAI": {
          "type": "object",
          "description": "OpenAI API configuration"
        }
      }
    },
    "ingress-nginx": {
      "type": "object",
      "description": "Ingress-NGINX controller configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable ingress-nginx",
          "default": true
        },
        "tcp": {
          "type": "object",
          "description": "TCP service mappings",
          "properties": {
            "22": {
              "type": "string",
              "description": "Git SSH service mapping",
              "default": "csghub/csghub-gitlab-shell:22"
            }
          }
        },
        "controller": {
          "type": "object",
          "properties": {
            "image": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "default": "opencsghq/ingress-nginx-controller"
                }
              }
            },
            "admissionWebhooks": {
              "type": "object",
              "properties": {
                "patch": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "string",
                          "default": "opencsghq/ingress-nginx-kube-webhook-certgen"
                        }
                      }
                    }
                  }
                }
              }
            },
            "config": {
              "type": "object",
              "description": "NGINX configuration",
              "properties": {
                "annotations-risk-level": {
                  "type": "string",
                  "description": "Risk level for annotations",
                  "default": "Critical"
                },
                "custom-http-errors": {
                  "type": "string",
                  "description": "Custom HTTP error codes",
                  "default": "404,500,502,503"
                }
              }
            },
            "allowSnippetAnnotations": {
              "type": "boolean",
              "description": "Allow snippet annotations",
              "default": true
            },
            "service": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["LoadBalancer", "NodePort"]
                },
                "nodePorts": {
                  "type": "object",
                  "properties": {
                    "http": {
                      "type": "integer",
                      "default": 30080
                    },
                    "https": {
                      "type": "integer",
                      "default": 30443
                    },
                    "tcp": {
                      "type": "object",
                      "properties": {
                        "22": {
                          "type": "integer",
                          "default": 30022
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "defaultBackend": {
          "type": "object",
          "description": "Default backend configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable default backend",
              "default": true
            },
            "image": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "default": "opencsghq/ingress-nginx-custom-error-pages"
                },
                "tag": {
                  "type": "string",
                  "default": "v1.2.0"
                }
              }
            }
          }
        }
      }
    },
    "reloader": {
      "type": "object",
      "description": "Reloader configuration",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "default": "opencsghq/stakater-reloader"
            }
          }
        }
      }
    },
    "fluentd": {
      "type": "object",
      "description": "Fluentd logging configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Fluentd",
          "default": false
        },
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "default": "opencsghq/fluent-fluentd-kubernetes-daemonset"
            }
          }
        }
      }
    }
  },
  "if": {
    "properties": {
      "global": {
        "properties": {
          "edition": { "enum": ["ee", "saas"] }
        },
        "required": ["edition"]
      }
    }
  },
  "then": {
    "properties": {
      "csgship": {
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "else": {
    "properties": {
      "csgship": {
        "properties": {
          "enabled": {
            "const": false
          }
        }
      }
    }
  }
}