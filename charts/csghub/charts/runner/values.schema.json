{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "pattern": "^v?\\d+\\.\\d+\\.\\d+(-\\w+)?$"
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "IfNotPresent", "Never"]
            }
          }
        },
        "namespace": {
          "type": "string",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "autoConfigure": {
          "type": "boolean"
        },
        "mergingNamespace": {
          "type": "string",
          "enum": ["Multi", "Single", "Disable"]
        },
        "knative": {
          "type": "object",
          "properties": {
            "serving": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "format": "hostname"
                }
              },
              "required": ["domain"]
            }
          },
          "required": ["serving"]
        },
        "pipIndexUrl": {
          "type": "string",
          "format": "uri"
        },
        "usePublicDomain": {
          "type": "boolean"
        },
        "ingress": {
          "type": "object",
          "properties": {
            "className": {
              "type": "string"
            },
            "domain": {
              "type": "string",
              "format": "hostname"
            },
            "useTop": {
              "type": "boolean"
            },
            "service": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["LoadBalancer", "NodePort", "ClusterIP"]
                }
              },
              "required": ["type"]
            }
          },
          "required": ["className", "domain", "service"]
        },
        "registry": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "required": ["enabled"]
        },
        "objectStore": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "required": ["enabled"]
        }
      },
      "required": ["namespace", "autoConfigure", "mergingNamespace", "ingress", "registry", "objectStore"]
    },
    "externalUrl": {
      "type": "string",
      "format": "uri"
    },
    "hubAPIToken": {
      "type": "string"
    },
    "replicas": {
      "type": "integer",
      "minimum": 1
    },
    "region": {
      "type": "string"
    },
    "interval": {
      "type": "integer",
      "minimum": 1
    },
    "image": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "format": "hostname"
        },
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string",
          "pattern": "^v?\\d+\\.\\d+\\.\\d+(-\\w+)?$"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"]
        }
      },
      "required": ["registry", "repository", "pullPolicy"]
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        }
      },
      "required": ["create"]
    },
    "logging": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "enum": ["debug", "info", "warning", "error"]
        }
      },
      "required": ["level"]
    },
    "resources": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti|Pi|Ei|m|K|M|G|T|P|E)?$"
            },
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]+)?(m)?$"
            }
          }
        },
        "limits": {
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti|Pi|Ei|m|K|M|G|T|P|E)?$"
            },
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]+)?(m)?$"
            }
          }
        }
      }
    },
    "chartContext": {
      "type": "object",
      "properties": {
        "isBuiltIn": {
          "type": "boolean"
        }
      },
      "required": ["isBuiltIn"]
    }
  },
  "required": ["global", "externalUrl", "image", "rbac", "chartContext"]
}