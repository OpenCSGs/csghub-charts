{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/ -}}

{{- if and .Values.global.postgresql.enabled (not .Values.chartContext.isBuiltIn) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.custom" (list . "postgresql") }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 600
  backoffLimit: 10
  activeDeadlineSeconds: 1200
  template:
    metadata:
      name: {{ include "common.names.custom" (list . "postgresql") }}
      labels: {{ include "common.labels" . | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      {{- with (or .Values.postgresql.image.pullSecrets .Values.image.pullSecrets .Values.global.image.pullSecrets) }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: psql
          image: {{ include "image.fixed.prefix" (list . "opencsghq/psql:latest")  }}
          imagePullPolicy: {{ or .Values.postgresql.image.pullPolicy .Values.image.pullPolicy .Values.global.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              until pg_isready;
              do
                echo 'Wait for PostgreSQL to be ready';
                sleep 2;
              done;
              psql -f /scripts/initialize.sql
          env:
            - name: PGHOST
              value: {{ include "common.names.custom" (list . "postgresql") | quote }}
            - name: PGPORT
              value: {{ include "csghub.svc.port" "postgresql" | quote }}
            - name: PGDATABASE
              value: "postgres"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.names.custom" (list . "postgresql") }}
                  key: postgres
          volumeMounts:
            - name: init
              mountPath: /scripts
      volumes:
        - name: init
          configMap:
            name: {{ include "common.names.custom" (list . "postgresql-init") }}
{{- end }}
