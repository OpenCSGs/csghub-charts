suite: Test Runner ConfigMap
templates:
  - runner/configmap.yaml
release:
  name: csghub
  namespace: csghub
set:
  global:
    ingress:
      domain: "example.com"
      tls:
        enabled: true
        secretName: "test-tls"
    image:
      registry: "acr.io"
      pullPolicy: "Never"
      pullSecrets: ["acr-pull-secret"]
    registry:
      enabled: true
    objectStore:
      enabled: true
  server:
    name: "server-svc"
    service:
      port: "8070"
  runner:
    name: "runner-svc"
    namespace: "spaces"
    interval: 30
    region: "cn-north-1"
    usePublicDomain: true
    modelRegistry: "model.io"
    service:
      port: 8072
    gpuModelLabel:
      typeLabel: "nvidia.com/gpu.product"
      capacityLabel: "nvidia.com/gpu"
  loki:
    name: "loki-svc"
  tempo:
    enabled: true
  registry:
    name: "registry"
  minio:
    name: "minio"
tests:
  - it: Should render configmap correctly
    template: runner/configmap.yaml
    asserts:
      - equal:
          path: metadata.name
          value: "csghub-runner-svc"
      - equal:
          path: metadata.labels["app.kubernetes.io/service"]
          value: "runner-svc"
      - matchRegex:
          path: data.STARHUB_SERVER_API_TOKEN
          pattern: ".{128}"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_WEBHOOK_ENDPOINT
          value: "http://csghub-server-svc:8070"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_PUBLIC_DOMAIN
          value: "http://csghub-runner-svc:8072"
      - equal:
          path: data.STARHUB_SERVER_LOGCOLLECTOR_LOKI_URL
          value: "http://csghub-loki-svc:3100"
      - equal:
          path: data.STARHUB_SERVER_CLUSTER_SPACES_NAMESPACE
          value: "spaces"
      - equal:
          path: data.STARHUB_SERVER_CLUSTER_RUNNER_NAMESPACE
          value: "csghub"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_WATCH_CONFIGMAP_INTERVAL_IN_SEC
          value: "30"
      - equal:
          path: data.STARHUB_SERVER_CLUSTER_REGION
          value: "cn-north-1"
      - equal:
          path: data.STARHUB_SERVER_PUBLIC_ROOT_DOMAIN
          value: "public.example.com"
      - equal:
          path: data.STARHUB_SERVER_INTERNAL_ROOT_DOMAIN
          value: "spaces.app.internal"
      - equal:
          path: data.STARHUB_SERVER_DOCKER_REG_BASE
          value: "csghub.example.com/csghub/"
      - equal:
          path: data.STARHUB_SERVER_DOCKER_IMAGE_PULL_SECRET
          value: "csghub-docker-credential"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_IMAGE_BUILDER_GIT_IMAGE
          value: "acr.io/opencsghq/git:2.36.2"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_IMAGE_BUILDER_KANIKO_IMAGE
          value: "acr.io/opencsghq/kaniko-executor:v1.24.0"
      - matchRegex:
          path: data.STARHUB_SERVER_RUNNER_IMAGE_BUILDER_KANIKO_ARGS
          pattern: ".*csghub.example.com.*--skip-tls-verify,--skip-tls-verify-pull,--insecure,--insecure-pull"
      - equal:
          path: data.STARHUB_SERVER_GPU_MODEL_LABEL
          value: '[{"type_label": "nvidia.com/gpu.product", "capacity_label": "nvidia.com/gpu"}]'
      - equal:
          path: data.STARHUB_SERVER_MODEL_DOWNLOAD_ENDPOINT
          value: "https://csghub.example.com"
      - equal:
          path: data.STARHUB_SERVER_MODEL_DOCKER_REG_BASE
          value: "model.io"
      - equal:
          path: data.STARHUB_SERVER_S3_ACCESS_KEY_ID
          value: "minio"
      - equal:
          path: data.STARHUB_SERVER_S3_ENDPOINT
          value: "https://minio.example.com"
      - equal:
          path: data.STARHUB_SERVER_S3_BUCKET
          value: "csghub-runner-svc"
      - equal:
          path: data.STARHUB_SERVER_S3_REGION
          value: "cn-north-1"
      - equal:
          path: data.STARHUB_SERVER_S3_ENABLE_SSL
          value: "true"
      - equal:
          path: data.STARHUB_SERVER_S3_BUCKET_LOOKUP
          value: "path"
      - equal:
          path: data.OPENCSG_TRACING_OTLP_ENDPOINT
          value: "http://csghub-tempo:4317"
      - equal:
          path: data.OPENCSG_TRACING_OTLP_LOGGING
          value: "true"

  - it: Should render configmap correctly
    template: runner/configmap.yaml
    set:
      global:
        registry:
          enabled: false
          external:
            registry: "registry.io"
            repository: "test"
            insecure: false
        objectStore:
          enabled: false
          external:
            endpoint: "https://s4.example.com"
            accessKey: "testUser"
            secretKey: "testPassword"
            bucket: "csghub-eva"
            region: "es-west-1"
            encrypt: "false"
            secure: "false"
            pathStyle: "false"
      runner:
        usePublicDomain: false
    asserts:
      - equal:
          path: data.STARHUB_SERVER_PUBLIC_ROOT_DOMAIN
          value: ""
      - equal:
          path: data.STARHUB_SERVER_DOCKER_REG_BASE
          value: "registry.io/test/"
      - equal:
          path: data.STARHUB_SERVER_S3_ACCESS_KEY_ID
          value: "testUser"
      - equal:
          path: data.STARHUB_SERVER_S3_ACCESS_KEY_SECRET
          value: "testPassword"
      - equal:
          path: data.STARHUB_SERVER_S3_ENDPOINT
          value: "https://s4.example.com"
      - equal:
          path: data.STARHUB_SERVER_S3_BUCKET
          value: "csghub-eva"
      - equal:
          path: data.STARHUB_SERVER_S3_REGION
          value: "es-west-1"
      - equal:
          path: data.STARHUB_SERVER_S3_ENABLE_SSL
          value: "false"
      - equal:
          path: data.STARHUB_SERVER_S3_BUCKET_LOOKUP
          value: "auto"
