suite: Test Minio Resources
templates:
  - minio/configmap.yaml
  - minio/ingress.yaml
  - minio/job.yaml
  - minio/secret.yaml
  - minio/service.yaml
  - minio/statefulset.yaml
release:
  name: csghub
  namespace: csghub
set:
  global:
    ingress:
      enabled: true
      domain: example.cn
      tls:
        enabled: true
        secretName: "example-cn-tls"
      service:
        type: LoadBalancer
    image:
      registry: ""
      pullPolicy: "Never"
      pullSecrets: ["acr-pull-secret"]
    persistence:
      storageClass: "nfs-provisioner"
      accessModes: ["ReadWriteOnce", "ReadWriteMany"]
      size: "25Gi"
    objectStore:
      enabled: true
  minio:
    name: "minio"
    image:
      registry: "docker.io"
      repository: "minio/minio"
      tag: "2025.10.01"
      pullPolicy: ""
    service:
      type: "ClusterIP"
      port: 9002
      protocol: TCP
    ingress:
      enabled: true
    console:
      enabled: false
      service:
        port: 9003
    persistence:
      size: ""
tests:
  - it: Should render all resources correctly
    templates:
      - minio/configmap.yaml
      - minio/ingress.yaml
      - minio/job.yaml
      - minio/secret.yaml
      - minio/service.yaml
      - minio/statefulset.yaml
    asserts:
      - equal:
          path: metadata.name
          value: "csghub-minio"
      - equal:
          path: metadata.labels["app.kubernetes.io/service"]
          value: "minio"

  - it: Should render configmap correctly
    template: minio/configmap.yaml
    asserts:
      - matchRegex:
          path: data["create_minio_buckets.sh"]
          pattern: '.*'

  - it: Should render ingress correctly
    template: minio/ingress.yaml
    asserts:
      - contains:
          path: spec.tls[0].hosts
          content: "minio.example.cn"
      - equal:
          path: spec.tls[0].secretName
          value: "example-cn-tls"
      - equal:
          path: spec.rules[0].host
          value: "minio.example.cn"
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: "csghub-minio"
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 9002

  - it: Should render ingress correctly with console enabled
    template: minio/ingress.yaml
    set:
      minio:
        console:
          enabled: true
        ingress:
          tls:
            secretName: "example-cn-tls-local"
    asserts:
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/configuration-snippet"]
          value: |
            rewrite ^/console/(.*) /$1 break;
      - equal:
          path: spec.tls[0].secretName
          value: "example-cn-tls-local"
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/console(/|$)(.*)"
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: "csghub-minio"
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 9003

  - it: Should render job correctly
    template: minio/job.yaml
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: "docker.io/busybox:latest"
      - equal:
          path: spec.template.spec.containers[0].image
          value: "docker.io/minio/minio:2025.10.01"
      - equal:
          path: spec.template.spec.volumes[0].configMap.defaultMode
          value: 0744

  - it: Should render secret correctly
    template: minio/secret.yaml
    set:
      minio:
        region: "es-west-1"
        buckets:
          - name: csghub-test
            policy: none
          - name: csghub-test-public
            policy: download
    asserts:
      - equal:
          decodeBase64: true
          path: data.MINIO_DEFAULT_REGION
          value: "es-west-1"
      - matchRegex:
          decodeBase64: true
          path: data.MINIO_DEFAULT_BUCKETS
          pattern: "csghub-test:none,csghub-test-public:download"
      - equal:
          decodeBase64: true
          path: data.MINIO_SERVER_URL
          value: "https://minio.example.cn"

  - it: Should render service correctly
    template: minio/service.yaml
    set:
      minio:
        console:
          enabled: true
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/service"]
          value: "minio"
      - equal:
          path: spec.selector["app.kubernetes.io/service"]
          value: "minio"
      - equal:
          path: spec.type
          value: "ClusterIP"
      - equal:
          path: spec.ports[0].port
          value: 9002
      - equal:
          path: spec.ports[1].port
          value: 9003

  - it: Should render statefulset with global correctly
    template: minio/statefulset.yaml
    set:
      minio:
        console:
          enabled: true
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/service"]
          value: "minio"
      - equal:
          path: spec.selector.matchLabels["app.kubernetes.io/service"]
          value: "minio"
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/service"]
          value: "minio"
      - equal:
          path: metadata.annotations["reloader.stakater.com/auto"]
          value: "true"
      - equal:
          path: spec.serviceName
          value: "csghub-minio"
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: "acr-pull-secret"
      - equal:
          path: spec.template.spec.containers[0].image
          value: "docker.io/minio/minio:2025.10.01"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: "Never"
      - equal:
          path: spec.volumeClaimTemplates[0].spec.accessModes
          value: ["ReadWriteOnce", "ReadWriteMany"]
      - equal:
          path: spec.volumeClaimTemplates[0].spec.storageClassName
          value: "nfs-provisioner"
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: "25Gi"

  - it: Should render deployment with local correctly
    template: minio/statefulset.yaml
    set:
      global:
        image:
          registry: "opencsg-registry.cn-beijing.cr.aliyuncs.com"
      minio:
        image:
          pullPolicy: "IfNotPresent"
          pullSecrets: ["docker-pull-secret"]
        persistence:
          accessModes: ["ReadWriteOnce"]
          storageClass: "hostPath"
          size: "20Gi"
        nodeSelector:
          diskType: ssd
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: "docker-pull-secret"
      - equal:
          path: spec.template.spec.containers[0].image
          value: "opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/minio/minio:2025.10.01"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: "IfNotPresent"
      - equal:
          path: spec.volumeClaimTemplates[0].spec.accessModes
          value: ["ReadWriteOnce"]
      - equal:
          path: spec.volumeClaimTemplates[0].spec.storageClassName
          value: "hostPath"
      - equal:
          path: spec.template.spec.nodeSelector.diskType
          value: "ssd"
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: "20Gi"
