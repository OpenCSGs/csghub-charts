{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/ -}}

{{- $service := include "common.service" (dict "service" "rproxy" "global" .) | fromYaml }}
{{- $serviceName := include "common.names.custom" (list . $service.name) }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/service: {{ $service.name }}
    {{- if $service.labels }}
      {{- toYaml $service.labels | nindent 4 }}
    {{- else }}
      {{- include "common.labels" . | nindent 4 }}
    {{- end }}
  annotations:
    reloader.stakater.com/auto: "true"
    {{- if $service.annotations }}
      {{- toYaml $service.annotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ $service.replicas | default 1 }}
  minReadySeconds: {{ $service.minReadySeconds | default 30 }}
  selector:
    matchLabels:
      app.kubernetes.io/service: {{ $service.name }}
      {{- if $service.selector }}
        {{- toYaml $service.selector | nindent 6 }}
      {{- else }}
        {{- include "common.labels.selector" . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/service: {{ $service.name }}
        {{- if $service.podLabels }}
          {{- toYaml $service.podLabels | nindent 8 }}
        {{- else }}
          {{- include "common.labels" . | nindent 8 }}
        {{- end }}
      annotations:
      {{- if $service.podAnnotations }}
        {{- toYaml $service.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if $service.coredns.enabled }}
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - {{ include "coredns.service.ip" . }}
        searches:
          - {{ .Release.Namespace }}.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
      {{- end }}
      terminationGracePeriodSeconds: {{ $service.terminationGracePeriodSeconds | default 20 }}
      {{- if $service.serviceAccountName }}
      serviceAccountName: {{ $service.serviceAccountName }}
      automountServiceAccountToken: {{ $service.automountServiceAccountToken | default true }}
      {{- end }}
      {{- with (or (dig "image" "pullSecrets" "" $service) .Values.image.pullSecrets .Values.global.image.pullSecrets) }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
        {{- include "wait-for-server" . | nindent 8 }}
      containers:
        - name: {{ $service.name }}
          {{- $rproxyImage := include "csghub.service.image" (dict "service" $service "context" .) | fromYaml }}
          image: {{ include "common.image" (list . $rproxyImage) }}
          imagePullPolicy: {{ or $rproxyImage.pullPolicy .Values.global.image.pullPolicy }}
          command:
            - "/starhub-bin/starhub"
            - "start"
            - "rproxy"
            - "-l"
            - {{ .Values.logging.level | default "info" | quote }}
          ports:
            - containerPort: 8083
              name: {{ dig "service" "name" $service.name $service }}
              protocol: {{ dig "service" "protocol" "TCP" $service }}
          envFrom:
            - configMapRef:
                name: {{ include "common.names.custom" (list . "core") }}
          {{- with $service.environments }}
          env:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if $service.resources }}
          resources:
            {{- toYaml $service.resources | nindent 12 }}
          {{- end }}
          {{- if $service.volumeMounts }}
          volumeMounts:
            {{- toYaml $service.volumeMounts | nindent 12 }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8083
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- if $service.startupProbe }}
          startupProbe:
            {{- toYaml $service.startupProbe | nindent 12 }}
          {{- end }}
          {{- if $service.securityContext }}
          securityContext:
            {{- toYaml $service.securityContext | nindent 12 }}
          {{- end }}
          {{- if $service.lifecycle }}
          lifecycle:
            {{- toYaml $service.lifecycle | nindent 12 }}
          {{- end }}
          {{- if $service.stdin }}
          stdin: {{ $service.stdin }}
          {{- end }}
          {{- if $service.tty }}
          tty: {{ $service.tty }}
          {{- end }}
        {{- if $service.nginx.enabled }}
        - name: {{ printf "%s-nginx" $service.name }}
          {{- $nginxImage := mergeOverwrite .Values.image $service.nginx.image }}
          image: {{ include "common.image" (list . $nginxImage) }}
          imagePullPolicy: {{ or $nginxImage.pullPolicy .Values.global.image.pullPolicy }}
          ports:
            - containerPort: 80
              name: {{ printf "%s-nginx" $service.name }}
              protocol: {{ dig "service" "protocol" "TCP" $service }}
          {{- with $service.environments }}
          env:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if $service.resources }}
          resources:
            {{- toYaml $service.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/config.d
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- if $service.readinessProbe }}
          readinessProbe:
            {{- toYaml $service.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $service.startupProbe }}
          startupProbe:
            {{- toYaml $service.startupProbe | nindent 12 }}
          {{- end }}
          {{- if $service.securityContext }}
          securityContext:
            {{- toYaml $service.securityContext | nindent 12 }}
          {{- end }}
          {{- if $service.lifecycle }}
          lifecycle:
            {{- toYaml $service.lifecycle | nindent 12 }}
          {{- end }}
          {{- if $service.stdin }}
          stdin: {{ $service.stdin }}
          {{- end }}
          {{- if $service.tty }}
          tty: {{ $service.tty }}
          {{- end }}
        {{- end }}
        {{- if $service.coredns.enabled }}
        - name: {{ printf "%s-coredns" $service.name }}
          {{- $corednsImage := mergeOverwrite .Values.image $service.coredns.image }}
          image: {{ include "common.image" (list . $corednsImage) }}
          imagePullPolicy: {{ or $corednsImage.pullPolicy .Values.global.image.pullPolicy }}
          args:
            - "-conf"
            - "/etc/coredns/corefile"
          ports:
            - containerPort: 53
              name: coredns-tcp
              protocol: "TCP"
            - containerPort: 53
              name: coredns-udp
              protocol: "UDP"
          {{- with $service.environments }}
          env:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if $service.resources }}
          resources:
            {{- toYaml $service.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: corefile
              mountPath: /etc/coredns
          livenessProbe:
            tcpSocket:
              port: 53
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- if $service.readinessProbe }}
          readinessProbe:
            {{- toYaml $service.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $service.startupProbe }}
          startupProbe:
            {{- toYaml $service.startupProbe | nindent 12 }}
          {{- end }}
          {{- if $service.securityContext }}
          securityContext:
            {{- toYaml $service.securityContext | nindent 12 }}
          {{- end }}
          {{- if $service.lifecycle }}
          lifecycle:
            {{- toYaml $service.lifecycle | nindent 12 }}
          {{- end }}
          {{- if $service.stdin }}
          stdin: {{ $service.stdin }}
          {{- end }}
          {{- if $service.tty }}
          tty: {{ $service.tty }}
          {{- end }}
        {{- end }}
      {{- if or $service.nginx.enabled $service.coredns.enabled }}
      volumes:
        {{- if $service.nginx.enabled }}
        - name: config
          configMap:
            name: {{ printf "%s-nginx" $serviceName }}
        {{- end }}
        {{- if $service.coredns.enabled }}
        - name: corefile
          configMap:
            name: {{ printf "%s-coredns" $serviceName }}
        {{- end }}
      {{- end }}
      {{- if $service.nodeSelector }}
      nodeSelector:
        {{- toYaml $service.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $service.tolerations }}
      tolerations:
        {{- toYaml $service.tolerations | nindent 8 }}
      {{- end }}
      {{- if $service.affinity }}
      affinity:
        {{- toYaml $service.affinity | nindent 8 }}
      {{- end }}
      {{- if $service.podSecurityContext }}
      securityContext:
        {{- toYaml $service.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if $service.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml $service.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      {{- if $service.hostname }}
      hostname: {{ $service.hostname }}
      {{- end }}
      {{- if $service.subdomain }}
      subdomain: {{ $service.subdomain }}
      {{- end }}
  {{- if $service.strategy }}
  strategy:
    {{- toYaml $service.strategy | nindent 4 }}
  {{- end }}
  {{- if $service.revisionHistoryLimit }}
  revisionHistoryLimit: {{ $service.revisionHistoryLimit }}
  {{- end }}
  progressDeadlineSeconds: {{ $service.progressDeadlineSeconds | default 600 }}
