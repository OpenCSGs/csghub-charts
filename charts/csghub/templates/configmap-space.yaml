{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if and .Values.global.deploy.enabled .Values.global.deploy.autoConfigure }}
{{- if ne .Values.global.deploy.mergingNamespace "Single" }}
{{- $registryConfig := include "chart.registryConfig" (dict "service" .Values.csghub.runner "global" .) | fromYaml }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.custom" (list . "runner-space") }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" (dict "context" . "service" "runner-space") | nindent 4 }}
data:
  space-app.yaml: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: {{ .Values.global.deploy.namespace }}
      labels:
        kubernetes.io/metadata.name: {{ .Values.global.deploy.namespace }}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: {{ include "common.names.custom" (list . "registry-docker-config") }}
      namespace: {{ .Values.global.deploy.namespace }}
      annotations:
        helm.sh/resource-policy: keep
    type: kubernetes.io/dockerconfigjson
    data:
      .dockerconfigjson: {{ printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"auth\":\"%s\"}}}" $registryConfig.registry $registryConfig.username $registryConfig.password (printf "%s:%s" $registryConfig.username $registryConfig.password | b64enc) | b64enc }}
    ---
    {{- end }}
{{- end }}
