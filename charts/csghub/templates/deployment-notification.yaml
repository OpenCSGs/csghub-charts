{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.custom" (list . "notification") }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" (dict "context" . "service" "notification") | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
    {{- with .Values.notification.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "common.serviceSelectorLabels" (dict "selector" true "context" . "service" "notification") | nindent 6 }}
  replicas: {{ .Values.notification.replicas }}
  revisionHistoryLimit: 1
  minReadySeconds: 30
  template:
    metadata:
      annotations:
        {{- with .Values.notification.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" (dict "context" . "service" "notification") | nindent 8 }}
    spec:
      {{- with (or .Values.server.image.pullSecrets .Values.global.image.pullSecrets) }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with .Values.notification.securityContext }}
      securityContext:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- if .Values.server.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.custom" (list . "notification") }}
      automountServiceAccountToken: {{ .Values.server.serviceAccount.automount }}
      {{- end }}
      initContainers:
        - name: wait-for-server
          image: {{ include "image.fixed.prefix" (list . "busybox:latest") }}
          imagePullPolicy: {{ or .Values.server.image.pullPolicy .Values.global.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              until nc -z {{ include "common.names.custom" (list . "server") }} {{ include "csghub.svc.port" "server" }};
              do
                echo 'Wait for csghub-server to be ready';
                sleep 2;
              done
      containers:
        - name: notification
          {{- $tag := include "csghub.image.tag" (dict "tag" (or .Values.server.image.tag .Values.global.image.tag) "context" .) }}
          {{- $_ := set .Values.server.image "tag" $tag }}
          image: {{ include "image.generic.prefix" (list . .Values.server.image) }}
          imagePullPolicy: {{ or .Values.server.image.pullPolicy .Values.global.image.pullPolicy }}
          command: [ "/starhub-bin/starhub", "notification", "launch", "-l", {{ .Values.server.logging.level | default "info" | quote }} ]
          ports:
            - containerPort: 8095
              name: notification
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include  "common.names.custom" (list . "core") }}
          {{- with .Values.server.environments }}
          env:
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          resources:
            {{- if .Values.autoscaling.enabled }}
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: 8095
            initialDelaySeconds: 20
            periodSeconds: 10
          securityContext:
            {{- .Values.notification.podSecurityContext | toYaml | nindent 12 }}
      {{- with .Values.notification.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.notification.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.notification.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
