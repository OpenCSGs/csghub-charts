{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.custom" (list . "mirror") }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" (dict "context" . "service" "mirror") | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
    {{- with .Values.csghub.mirror.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "common.serviceSelectorLabels" (dict "selector" true "context" . "service" "mirror") | nindent 6 }}
  replicas: {{ .Values.csghub.mirror.replicas }}
  revisionHistoryLimit: 1
  minReadySeconds: 30
  template:
    metadata:
      annotations:
        {{- with .Values.csghub.mirror.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" (dict "context" . "service" "mirror") | nindent 8 }}
    spec:
      {{- with (or .Values.global.image.pullSecrets .Values.csghub.server.image.pullSecrets) }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with .Values.csghub.mirror.securityContext }}
      securityContext:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- if .Values.csghub.server.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.custom" (list . "mirror") }}
      automountServiceAccountToken: {{ .Values.csghub.server.serviceAccount.automount }}
      {{- end }}
      initContainers:
        - name: wait-for-server
          image: {{ include "image.fixed.prefix" (list . "busybox:latest") }}
          imagePullPolicy: {{ .Values.csghub.server.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "until nc -z {{ include "common.names.custom" (list . "server") }} {{ include "csghub.svc.port" "server" }}; do echo 'Wait for csghub-server to be ready'; sleep 2; done" ]
      containers:
        - name: mirror-repo
          {{- $tag := include "csghub.image.tag" (dict "tag" (or .Values.global.image.tag .Values.csghub.server.image.tag) "context" .) }}
          {{- $_ := set .Values.csghub.server.image "tag" $tag }}
          image: {{ include "image.generic.prefix" (list . .Values.csghub.server.image) }}
          imagePullPolicy: {{ or .Values.global.image.pullPolicy .Values.csghub.server.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "update-ca-certificates && /starhub-bin/starhub mirror repo-sync" ]
          envFrom:
            - configMapRef:
                name: {{ include "common.names.custom" (list . "server") }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "nats") }}
            {{- if .Values.global.redis.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "redis") }}
            {{- end }}
            {{- if .Values.global.objectStore.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "minio") }}
            {{- end }}
          env:
            - name: OPENCSG_ACCOUNTING_NATS_URL
              value: "nats://$(NATS_USERNAME):$(NATS_PASSWORD)@{{ include "nats.internal.domain" . }}:{{ include "nats.internal.ports.api" . }}"
            {{- if .Values.global.redis.enabled }}
            - name: STARHUB_SERVER_REDIS_PASSWORD
              value: "$(REDIS_PASSWD)"
            {{- end }}
            {{- if .Values.global.objectStore.enabled }}
            - name: STARHUB_SERVER_S3_ACCESS_KEY_ID
              value: "$(MINIO_ROOT_USER)"
            - name: STARHUB_SERVER_S3_ACCESS_KEY_SECRET
              value: "$(MINIO_ROOT_PASSWORD)"
            {{- end }}
            {{- with .Values.csghub.server.environments }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- if .Values.csghub.autoscaling.enabled }}
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
            {{- end }}
          securityContext:
            {{- .Values.csghub.mirror.podSecurityContext | toYaml | nindent 12 }}
        - name: mirror-lfs
          image: {{ include "image.generic.prefix" (list . .Values.csghub.server.image) }}
          imagePullPolicy: {{ or .Values.global.image.pullPolicy .Values.csghub.server.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "update-ca-certificates && /starhub-bin/starhub mirror lfs-sync" ]
          envFrom:
            - configMapRef:
                name: {{ include "common.names.custom" (list . "server") }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "nats") }}
            {{- if .Values.global.redis.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "redis") }}
            {{- end }}
            {{- if .Values.global.objectStore.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "minio") }}
            {{- end }}
          env:
            - name: OPENCSG_ACCOUNTING_NATS_URL
              value: "nats://$(NATS_USERNAME):$(NATS_PASSWORD)@{{ include "nats.internal.domain" . }}:{{ include "nats.internal.ports.api" . }}"
            {{- if .Values.global.redis.enabled }}
            - name: STARHUB_SERVER_REDIS_PASSWORD
              value: "$(REDIS_PASSWD)"
            {{- end }}
            {{- if .Values.global.objectStore.enabled }}
            - name: STARHUB_SERVER_S3_ACCESS_KEY_ID
              value: "$(MINIO_ROOT_USER)"
            - name: STARHUB_SERVER_S3_ACCESS_KEY_SECRET
              value: "$(MINIO_ROOT_PASSWORD)"
            {{- end }}
            {{- with .Values.csghub.server.environments }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- if .Values.csghub.autoscaling.enabled }}
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
            {{- end }}
          securityContext:
            {{- .Values.csghub.mirror.podSecurityContext | toYaml | nindent 12 }}
      {{- with .Values.csghub.mirror.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.csghub.mirror.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.csghub.mirror.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}