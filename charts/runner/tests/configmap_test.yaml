suite: Test Runner ConfigMap
templates:
  - configmap.yaml
release:
  name: csghub
  namespace: csghub
set:
  global:
    ingress:
      domain: "example.com"
      tls:
        enabled: true
      service:
        type: "LoadBalancer"
    image:
      registry: "acr.io"
      tag: "v1.11.0"
      pullPolicy: "Never"
      pullSecrets: ["acr-pull-secret"]
    registry:
      enabled: false
    objectStore:
      enabled: false
  externalUrl: "https://csghub.example.cn"
  name: "runner-svc"
  chartContext:
    isBuiltIn: false
  region: "es-west-1"
  interval: 30
  namespace: "spaces"
  usePublicDomain: true
  modelRegistry: "model.io"
  knative:
    serving:
      domain: "example.com"
  logcollector:
    loki:
      address: "https://loki.example.cn"
  tempo:
    address: ""
  registry:
    registry: "registry.example.com"
    repository: "csghub"
    username: "registry"
    password: "asK2ksdhfsdf"
    insecure: true
  objectStore:
    endpoint: "https://s4.example.cn"
    accessKey: "minio"
    secretKey: "sdfkasd"
    bucket: "csghub-runner"
    region: "cn-north-1"
    secure: true
    encrypt: false
    pathStyle: true
tests:
  - it: Should render configmap correctly
    template: configmap.yaml
    asserts:
      - equal:
          path: metadata.name
          value: "csghub-runner-svc"
      - equal:
          path: metadata.labels["app.kubernetes.io/service"]
          value: "runner-svc"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_WEBHOOK_ENDPOINT
          value: "https://csghub.example.cn"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_PUBLIC_DOMAIN
          value: "https://runner-svc.example.com"
      - equal:
          path: data.STARHUB_SERVER_LOGCOLLECTOR_LOKI_URL
          value: "https://loki.example.cn"
      - equal:
          path: data.STARHUB_SERVER_CLUSTER_SPACES_NAMESPACE
          value: "spaces"
      - equal:
          path: data.STARHUB_SERVER_CLUSTER_RUNNER_NAMESPACE
          value: "csghub"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_WATCH_CONFIGMAP_INTERVAL_IN_SEC
          value: "30"
      - equal:
          path: data.STARHUB_SERVER_CLUSTER_REGION
          value: "es-west-1"
      - equal:
          path: data.STARHUB_SERVER_PUBLIC_ROOT_DOMAIN
          value: "public.example.com"
      - equal:
          path: data.STARHUB_SERVER_INTERNAL_ROOT_DOMAIN
          value: "spaces.app.internal"
      - equal:
          path: data.STARHUB_SERVER_DOCKER_REG_BASE
          value: "registry.example.com/csghub/"
      - equal:
          path: data.STARHUB_SERVER_DOCKER_IMAGE_PULL_SECRET
          value: "csghub-docker-credential"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_IMAGE_BUILDER_GIT_IMAGE
          value: "acr.io/alpine/git:2.36.2"
      - equal:
          path: data.STARHUB_SERVER_RUNNER_IMAGE_BUILDER_KANIKO_IMAGE
          value: "acr.io/bitnami/kaniko:1.23.2"
      - matchRegex:
          path: data.STARHUB_SERVER_RUNNER_IMAGE_BUILDER_KANIKO_ARGS
          pattern: ".*csghub.example.cn.*--skip-tls-verify,--skip-tls-verify-pull,--insecure,--insecure-pull"
      - equal:
          path: data.STARHUB_SERVER_GPU_MODEL_LABEL
          value: '[{"type_label": "nvidia.com/gpu.product", "capacity_label": "nvidia.com/gpu"}]'
      - equal:
          path: data.STARHUB_SERVER_MODEL_DOWNLOAD_ENDPOINT
          value: "https://csghub.example.cn"
      - equal:
          path: data.STARHUB_SERVER_MODEL_DOCKER_REG_BASE
          value: "model.io"
      - equal:
          path: data.STARHUB_SERVER_S3_ACCESS_KEY_ID
          value: "minio"
      - equal:
          path: data.STARHUB_SERVER_S3_ACCESS_KEY_SECRET
          value: "sdfkasd"
      - equal:
          path: data.STARHUB_SERVER_S3_ENDPOINT
          value: "https://s4.example.cn"
      - equal:
          path: data.STARHUB_SERVER_S3_BUCKET
          value: "csghub-runner"
      - equal:
          path: data.STARHUB_SERVER_S3_REGION
          value: "cn-north-1"
      - equal:
          path: data.STARHUB_SERVER_S3_ENABLE_SSL
          value: "true"
      - equal:
          path: data.STARHUB_SERVER_S3_BUCKET_LOOKUP
          value: "path"
      - equal:
          path: data.OPENCSG_TRACING_OTLP_LOGGING
          value: "false"

  - it: Should render configmap correctly
    template: configmap.yaml
    set:
      usePublicDomain: false
      tempo:
        address: "https://tempo.example.cn"
    asserts:
      - equal:
          path: data.STARHUB_SERVER_PUBLIC_ROOT_DOMAIN
          value: ""
      - equal:
          path: data.OPENCSG_TRACING_OTLP_ENDPOINT
          value: "https://tempo.example.cn"
      - equal:
          path: data.OPENCSG_TRACING_OTLP_LOGGING
          value: "true"
