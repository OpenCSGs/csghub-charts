{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $conf := merge .Values.global.casdoor (omit .Values "global" "exports") }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.custom" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations: {{ $conf.annotations | toYaml | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "common.labels.selector" . | nindent 6 }}
  replicas: {{ $conf.replicas }}
  revisionHistoryLimit: 1
  minReadySeconds: 30
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with $conf.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - {{ include "coredns.csghub" . }}
        searches:
          - {{ .Release.Namespace }}.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
      {{- with (or $conf.imagePullSecrets .Values.global.imagePullSecrets) }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with $conf.securityContext }}
      securityContext:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- if $conf.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.custom" . }}
      automountServiceAccountToken: {{ $conf.serviceAccount.automount }}
      {{- end }}
      initContainers:
        - name: wait-for-postgresql
          image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/postgres:15.7
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "until pg_isready -h $(STARHUB_DATABASE_HOST) -p $(STARHUB_DATABASE_PORT) -d $(STARHUB_DATABASE_NAME) -U $(STARHUB_DATABASE_USERNAME); do echo 'Waiting for PostgreSQL can be connected'; sleep 3; done" ]
          envFrom:
            - configMapRef:
                name: {{ include "common.names.custom" (list . "server") }}
            {{- if .Values.global.postgresql.enabled }}
            - secretRef:
                name: {{ include  "common.names.custom" (list . "postgresql") }}
            {{- end }}
          env:
            - name: STARHUB_DATABASE_USERNAME
              value: "casdoor"
            - name: STARHUB_DATABASE_NAME
              value: "casdoor"
            - name: PGPASSWORD
              {{- if .Values.global.postgresql.enabled }}
              value: "$(casdoor)"
              {{- else }}
              value: "$(STARHUB_DATABASE_PASSWORD)"
              {{- end }}
      containers:
        - name: casdoor
          image: {{ $conf.image.repository }}:{{ .Values.global.casdoor.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          ports:
            - containerPort: 8000
              name: casdoor
              protocol: TCP
          env:
            - name: RUNNING_IN_DOCKER
              value: "true"
            {{- with $conf.environments }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- $conf.resources | toYaml | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
          securityContext:
            {{- $conf.podSecurityContext | toYaml | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /conf
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.custom" . }}
      {{- with $conf.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $conf.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $conf.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}