{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $conf := merge .Values.global.portal (omit .Values "global" "exports") }}
{{- $ingress := merge .Values.global.ingress .Values.ingress }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.custom" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations: {{ $conf.annotations | toYaml | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "common.labels.selector" . | nindent 6 }}
  replicas: {{ $conf.replicas }}
  revisionHistoryLimit: 1
  minReadySeconds: 60
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with $conf.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      {{- with (or $conf.imagePullSecrets .Values.global.imagePullSecrets) }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with $conf.securityContext }}
      securityContext:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- if $conf.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.custom" . }}
      automountServiceAccountToken: {{ $conf.serviceAccount.automount }}
      {{- end }}
      initContainers:
        - name: wait-for-postgresql
          image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/postgres:15.7
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "until pg_isready -h $(CSGHUB_PORTAL_DATABASE_HOST) -p $(CSGHUB_PORTAL_DATABASE_PORT) -d $(CSGHUB_PORTAL_DATABASE_NAME) -U $(CSGHUB_PORTAL_DATABASE_USERNAME); do echo 'Waiting for PostgreSQL can be connected'; sleep 3; done" ]
          envFrom:
            - configMapRef:
                name: {{ include "common.names.custom" . }}
            {{- if .Values.global.postgresql.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "postgresql") }}
            {{- end }}
          env:
            - name: PGPASSWORD
              {{- if .Values.global.postgresql.enabled }}
              value: "$(csghub_portal)"
              {{- else }}
              value: "$(CSGHUB_CSGHUB_PORTAL_DATABASE_PASSWORD)"
              {{- end }}
        - name: wait-for-server
          image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/busybox:latest
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "until nc -z {{ include "server.internal.domain" . }} {{ include "server.internal.port" . }}; do echo 'Waiting for server can be connected'; sleep 2; done" ]
      containers:
        - name: portal
          image: {{ $conf.image.repository }}:{{ .Values.global.portal.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "/myapp/csghub-portal migration init && /myapp/csghub-portal migration migrate && /myapp/csghub-portal start server" ]
          ports:
            - containerPort: 8090
              name: portal
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "common.names.custom" . }}
            - configMapRef:
                name: {{ include "common.names.custom" (list . "server") }}
            - configMapRef:
                name: {{ include "common.names.custom" (list . "casdoor") }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "nats") }}
            {{- if .Values.global.postgresql.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "postgresql") }}
            {{- end }}
            {{- if .Values.global.minio.enabled }}
            - secretRef:
                name: {{ include "common.names.custom" (list . "minio") }}
            {{- end }}
          env:
            - name: CSGHUB_PORTAL_LOGIN_URL
              value: "{{ include "casdoor.external.endpoint" . }}/login/oauth/authorize?client_id=$(STARHUB_SERVER_CASDOOR_CLIENT_ID)&response_type=code&redirect_uri=$(CSGHUB_PORTAL_STARHUB_BASE_URL)/api/v1/callback/casdoor&scope=read&state=casdoor"
            - name: POSTGRES_PASSWORD
              {{- if .Values.global.postgresql.enabled }}
              value: "$(csghub_portal)"
              {{- else }}
              value: "$(CSGHUB_PORTAL_DATABASE_PASSWORD)"
              {{- end }}
            - name: CSGHUB_PORTAL_DATABASE_DSN
              value: "postgresql://$(CSGHUB_PORTAL_DATABASE_USERNAME):$(POSTGRES_PASSWORD)@$(CSGHUB_PORTAL_DATABASE_HOST):$(CSGHUB_PORTAL_DATABASE_PORT)/$(CSGHUB_PORTAL_DATABASE_NAME)?sslmode=disable"
            {{- if .Values.global.minio.enabled }}
            - name: CSGHUB_PORTAL_S3_ACCESS_KEY_ID
              value: "$(MINIO_ROOT_USER)"
            - name: CSGHUB_PORTAL_S3_ACCESS_KEY_SECRET
              value: "$(MINIO_ROOT_PASSWORD)"
            {{- end }}
            {{- with $conf.environments }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- $conf.resources | toYaml | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 20
            periodSeconds: 10
          securityContext:
            {{- $conf.podSecurityContext | toYaml | nindent 12 }}
          {{- if $ingress.tls.enabled }}
          volumeMounts:
            - name: certs
              mountPath: /usr/local/share/ca-certificates
              readOnly: true
          {{- end }}
      volumes:
        {{- if $ingress.tls.enabled }}
        - name: certs
          secret:
            {{- if $ingress.tls.autoGenerated }}
            secretName: {{ include "common.names.custom" (list . "proxy-certs") }}
            {{- else }}
            secretName: {{ $ingress.tls.secretName }}
            {{- end }}
        {{- end }}
      {{- with $conf.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $conf.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $conf.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}