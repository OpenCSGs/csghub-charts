{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $conf := merge .Values.global.portal (omit .Values "global" "exports") }}
{{- $ingress := merge .Values.global.ingress .Values.ingress }}
{{- if $ingress.enabled }}
apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "common.names.custom" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.global.ingress.tls.autoGenerated }}
    cert-manager.io/cluster-issuer: {{ include "common.names.custom" (list . "cluster-issuer")}}
    {{- end }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, DELETE, PATCH, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Host, X-Real-IP, X-Forwarded-Proto, X-Forwarded-Host, X-Forwarded-For"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    nginx.ingress.kubernetes.io/custom-http-errors: "500, 502, 503, 504"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/server-tokens: "false"
    nginx.ingress.kubernetes.io/use-gzip: "true"
    nginx.ingress.kubernetes.io/gzip-disable: "msie6"
    nginx.ingress.kubernetes.io/gzip-level: "6"
    nginx.ingress.kubernetes.io/gzip-min-length: "1100"
    nginx.ingress.kubernetes.io/gzip-types: "text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "off"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"
    nginx.ingress.kubernetes.io/types-hash-max-size: "4096"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/keep-alive: "300"
    nginx.ingress.kubernetes.io/client-header-timeout: "300"
    nginx.ingress.kubernetes.io/client-body-timeout: "300"
    nginx.ingress.kubernetes.io/backend-protocol: http
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* "^/endpoint/" {
        proxy_pass http://{{ include "proxy.internal.domain" . }}:{{ include "proxy.internal.port" . }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cookie_flags ~ nosecure samesite=lax;
      }
    {{- with $conf.ingress.annotations }}
    {{- toYaml . | nindent 4  }}
    {{- end  }}
spec:
  ingressClassName: nginx
  {{- if $ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ include "csghub.external.domain" . }}
      {{- if $ingress.tls.autoGenerated }}
      secretName: {{ include "common.names.custom" (list . "certs") }}
      {{- else }}
      {{- if $ingress.tls.secretName }}
      secretName: {{ $ingress.tls.secretName }}
      {{- else}}
      {{ fail "Ingress TLS is enabled but no secretName is provided for the TLS certificate." }}
      {{- end }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ include "csghub.external.domain" . }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
            {{- if eq (include "common.capabilities.ingress.apiVersion" .) "networking.k8s.io/v1" }}
              service:
                name: {{ include "common.names.custom" . }}
                port:
                  number: {{ $conf.service.port }}
            {{- else }}
              serviceName: {{ include "common.names.custom" . }}
              servicePort:  {{ $conf.service.port }}
            {{- end }}
          - path: /api/
            pathType: ImplementationSpecific
            backend:
            {{- if eq (include "common.capabilities.ingress.apiVersion" .) "networking.k8s.io/v1" }}
              service:
                name: {{ include "server.internal.domain" . }}
                port:
                  number: {{ include "server.internal.port" . }}
            {{- else }}
              serviceName: {{ include "server.internal.domain" . }}
              servicePort: {{ include "server.internal.port" . }}
            {{- end }}
          - path: /hf/
            pathType: ImplementationSpecific
            backend:
            {{- if eq (include "common.capabilities.ingress.apiVersion" .) "networking.k8s.io/v1" }}
              service:
                name: {{ include "server.internal.domain" . }}
                port:
                  number: {{ include "server.internal.port" . }}
            {{- else }}
              serviceName: {{ include "server.internal.domain" . }}
              servicePort: {{ include "server.internal.port" . }}
            {{- end }}
          - path: /.*\.git(/.*)?$
            pathType: ImplementationSpecific
            backend:
            {{- if eq (include "common.capabilities.ingress.apiVersion" .) "networking.k8s.io/v1" }}
              service:
                name: {{ include "server.internal.domain" . }}
                port:
                  number: {{ include "server.internal.port" . }}
            {{- else }}
              serviceName: {{ include "server.internal.domain" . }}
              servicePort: {{ include "server.internal.port" . }}
            {{- end }}
{{- end }}