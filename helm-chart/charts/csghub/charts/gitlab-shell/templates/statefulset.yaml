{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $conf := merge .Values.global.gitlabShell (omit .Values "global" "exports") }}
{{- if $conf.enabled }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "common.names.custom" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations: {{ $conf.annotations | toYaml | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "common.labels.selector" . | nindent 6 }}
  serviceName: {{ include "common.names.custom" . }}
  replicas: 1
  minReadySeconds: 30
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with $conf.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      {{- with (or $conf.imagePullSecrets .Values.global.imagePullSecrets) }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with $conf.securityContext }}
      securityContext:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- if $conf.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.custom" . }}
      automountServiceAccountToken: {{ $conf.serviceAccount.automount }}
      {{- end }}
      initContainers:
        - name: init-host-keys
          image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/alpine:latest
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          command: [ "/bin/sh", "-c", "if [ ! -e /srv/gitlab-shell/keys/ssh_host_* ]; then sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories && apk update && apk add openssh && ssh-keygen -A && cp /etc/ssh/ssh_host_* /srv/gitlab-shell/keys/; fi" ]
          volumeMounts:
            - name: data
              mountPath: /srv/gitlab-shell/keys
              readOnly: false
      containers:
        - name: gitlab-shell
          image: {{ $conf.image.repository }}:{{ .Values.global.gitlabShell.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ $conf.image.pullPolicy }}
          command: [ "/bin/bash", "-c", "cp /opt/gitlab-shell/{config.yml,.gitlab_shell_secret} /srv/gitlab-shell/ && /scripts/process-wrapper" ]
          ports:
            - containerPort: 22
              name: gitlab-shell
              protocol: TCP
          env:
            - name: KEYS_DIRECTORY
              value: "/srv/gitlab-shell/keys"
            - name: SSH_DAEMON
              value: "gitlab-sshd"
            {{- with $conf.environments }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- $conf.resources | toYaml | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 22
            initialDelaySeconds: 20
            periodSeconds: 10
          securityContext:
            {{- $conf.podSecurityContext | toYaml | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /opt/gitlab-shell
              readOnly: true
            - name: data
              mountPath: /srv/gitlab-shell/keys
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.custom" . }}
      {{- with $conf.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $conf.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $conf.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        namespace: {{ .Release.Namespace }}
        labels:
          {{- include "common.labels" . | nindent 10 }}
        annotations:
          helm.sh/resource-policy: keep
          {{- with $conf.annotations }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      spec:
        accessModes: {{ $conf.persistence.accessMode }}
        {{- if $conf.persistence.storageClass }}
        storageClassName: {{ $conf.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ $conf.persistence.size }}
{{- end }}