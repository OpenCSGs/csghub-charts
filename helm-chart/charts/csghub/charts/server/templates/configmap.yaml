{{- /*
Copyright OpenCSG, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- $conf := merge .Values.global.server (omit .Values "global" "exports") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.custom" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations:
    resource.dependencies/deployments: "{{ include "common.names.custom" . }} {{ include "common.names.custom" (list . "user") }} {{ include "common.names.custom" (list . "accounting") }} {{ include "common.names.custom" (list . "casdoor") }} {{ include "common.names.custom" (list . "mirror") }} {{ include "common.names.custom" (list . "portal") }} {{ include "common.names.custom" (list . "proxy") }} {{ include "common.names.custom" (list . "runner") }}"
    {{- with $conf.annotations }}
      {{- . | toYaml | nindent 4 }}
    {{- end }}
data:
  STARHUB_SERVER_MULTI_SYNC_ENABLED: "true"
  {{- if .Values.global.redis.enabled }}
  STARHUB_SERVER_REDIS_ENDPOINT: {{ include "redis.internal.endpoint" . | trimPrefix "http://" | trimPrefix "https://" }}
  {{- else }}
  STARHUB_SERVER_REDIS_ENDPOINT: {{ printf "%s:%s" $conf.redis.host ($conf.redis.port | toString) }}
  STARHUB_SERVER_REDIS_HOST: {{ $conf.redis.host }}
  STARHUB_SERVER_REDIS_PORT: {{ $conf.redis.port | toString }}
  STARHUB_SERVER_REDIS_PASSWORD: {{ $conf.redis.password }}
  {{- end }}
  {{- if .Values.global.gitaly.enabled }}
  STARHUB_SERVER_GITSERVER_TYPE: "gitaly"
  STARHUB_SERVER_GITALY_SERVER_SOCKET: {{ printf "tcp://%s:%s" (include "gitaly.internal.domain" .) (include "gitaly.internal.port" .) }}
  STARHUB_SERVER_GITALY_STORAGE: default
  STARHUB_SERVER_SSH_DOMAIN: {{ printf "ssh://git@%s:%s" (include "csghub.external.domain" .) (include "gitlab-shell.external.port" .) }}
  STARHUB_SERVER_GITALY_TOKEN: "YWJjMTIzc2VjcmV0"
  {{- end }}
  GIN_MODE: release
  STARHUB_SERVER_SAAS: "false"
  STARHUB_SERVER_MIRRORSERVER_ENABLE: "false"
  STARHUB_SERVER_API_TOKEN: {{ include "server.api.token" . }}
  STARHUB_SERVER_MIRROR_REMOTE: "false"
  {{- if .Values.global.minio.enabled }}
  {{- if .Values.global.ingress.tls.enabled }}
  STARHUB_SERVER_S3_ENABLE_SSL: "true"
  {{- else }}
  STARHUB_SERVER_S3_ENABLE_SSL:  "false"
  {{- end }}
  STARHUB_SERVER_S3_ENDPOINT: {{ include "minio.external.endpoint" . | trimPrefix "http://" | trimPrefix "https://" }} # used to generate download links for lfs files
  STARHUB_SERVER_S3_BUCKET: "csghub-git"
  STARHUB_SERVER_S3_REGION: "cn-north-1"
  STARHUB_SERVER_S3_BUCKET_LOOKUP: "path"
  {{- else }}
  {{- with $conf.objectStore }}
  STARHUB_SERVER_S3_ENDPOINT: {{ .endpoint | trimPrefix "http://" | trimPrefix "https://" }}
  STARHUB_SERVER_S3_ACCESS_KEY_ID: {{ .accessKey }}
  STARHUB_SERVER_S3_ACCESS_KEY_SECRET: {{ .accessSecret }}
  STARHUB_SERVER_S3_BUCKET: {{ .bucket }}
  STARHUB_SERVER_S3_REGION: {{ .region }}
  STARHUB_SERVER_S3_BUCKET_LOOKUP: {{ .pathStyle }}
  {{- end }}
  {{- end }}
  STARHUB_SERVER_SPACE_BUILDER_ENDPOINT: {{ include "builder.internal.endpoint" . }}
  STARHUB_SERVER_SPACE_RUNNER_ENDPOINT: {{ include "runner.internal.endpoint" . }}
  STARHUB_SERVER_PUBLIC_DOMAIN: {{ include "csghub.external.endpoint" . }}
  # Deprecated
  STARHUB_SERVER_PUBLIC_ROOT_DOMAIN: ""
  # Deprecated
  STARHUB_SERVER_INTERNAL_ROOT_DOMAIN: {{ printf "%s.app.internal:%s" .Values.global.runner.namespace (include "proxy.internal.port" .) }}
  STARHUB_SERVER_MODEL_DOWNLOAD_ENDPOINT: {{ include "csghub.external.endpoint" . }}
  STARHUB_JWT_SIGNING_KEY: "e2kk6awudc3620ed9a"
  OPENCSG_ACCOUNTING_SERVER_HOST: {{ printf "http://%s" (include "accounting.internal.domain" .) }}
  OPENCSG_ACCOUNTING_SERVER_PORT: {{ include "accounting.internal.port" . | quote }}
  OPENCSG_USER_SERVER_HOST: {{ printf "http://%s" (include "user.internal.domain" .) }}
  OPENCSG_USER_SERVER_PORT: {{ include "user.internal.port" . | quote }}
  {{- if .Values.global.postgresql.enabled }}
  STARHUB_DATABASE_HOST: {{ include "postgresql.internal.domain" . }}
  STARHUB_DATABASE_PORT: {{ include "postgresql.internal.port" . | quote }}
  STARHUB_DATABASE_USERNAME: "csghub_server"
  STARHUB_DATABASE_NAME: "csghub_server"
  STARHUB_DATABASE_TIMEZONE: "Asia/Shanghai"
  {{- else }}
  {{- with $conf.postgresql }}
  STARHUB_DATABASE_HOST: {{ default "127.0.0.1" .host }}
  STARHUB_DATABASE_PORT: {{ default "5432" .port | quote }}
  STARHUB_DATABASE_USERNAME: {{ default "postgres" .user }}
  STARHUB_DATABASE_PASSWORD: {{ .password }}
  STARHUB_DATABASE_NAME: {{ default "postgres" .database }}
  STARHUB_DATABASE_TIMEZONE: {{ default "UTC" .timezone }}
  {{- end }}
  {{- end }}
  STARHUB_SERVER_CASDOOR_CERTIFICATE: "/starhub-bin/casdoor/tls.crt"
  OPENCSG_WORKFLOW_SERVER_ENDPOINT: {{ include "temporal.internal.endpoint" . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.custom" (list . "server-init") }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "common.labels" . | nindent 4 }}
  annotations:
    resource.dependencies/deployments: "{{ include "common.names.custom" . }} {{ include "common.names.custom" (list . "user") }} {{ include "common.names.custom" (list . "accounting") }} {{ include "common.names.custom" (list . "casdoor") }} {{ include "common.names.custom" (list . "mirror") }} {{ include "common.names.custom" (list . "portal") }} {{ include "common.names.custom" (list . "proxy") }} {{ include "common.names.custom" (list . "runner") }}"
    {{- with $conf.annotations }}
      {{- . | toYaml | nindent 4 }}
    {{- end }}
data:
  update_casdoor.sql: |
    --
    -- Record Timestamp
    --
    SELECT now() as "Execute Timestamp";

    --
    -- PostgreSQL database dump
    --
    SET exit_on_error = on;
    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    --
    -- Set Default Schema for All Tables
    --

    SELECT pg_catalog.set_config('search_path', 'public', false);

    --
    -- Name: application; Type: TABLE; Schema: public; Owner: csghub
    --
    -- Connect to casdoor management database
    \connect casdoor

    -- Update RedirectURLs
    UPDATE
        application
    SET
        redirect_uris = '["{{ include "csghub.external.endpoint" . }}/api/v1/callback/casdoor"]'
    WHERE
        name = 'CSGHub';
  {{- $currentScope := . }}
  {{- range $path, $_ := .Files.Glob "scripts/*.sql" }}
    {{- with $currentScope }}
    {{- base $path | nindent 2 }}: |
      {{- .Files.Get $path | nindent 4 }}
    {{- end }}
  {{- end }}
