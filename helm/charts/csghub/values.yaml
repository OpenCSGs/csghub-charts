## All modifications in this configuration file are only performed under global configuration block.
## Any configuration outside global configuration block is an automatic adaptation configuration and should not be modified.

## Global configuration will override subChart's configuration
global:
  images:
    ## List of Kubernetes secrets to use for pulling images (e.g., for private registry).
    pullSecrets: [ ]
    ## Specify path prefix of images, no need to add the final slash `/`
    ## eg: docker.io/minio/minio:latest ==> {{ prefix }}/minio/minio:latest
    # prefix: ""
    ## Globally specify the image version to be used by csghub_server.
    ## Example: latest, v1.0.0, etc.
    # tag: ""

  ## Define the access domain name of csghub and whether to enable encrypted access.
  ingress:
    ## Ideally, it is best to have a registered domain name, +
    ## because local domain names may require some additional configuration
    domain: example.com
    ## According to the characteristics of the program, +
    ## it is not allowed to configure whether to enable TLS for each subChart separately, +
    ## but subCharts are allowed to define their own TLS secretName.
    tls: { }
      # enabled: false
      ## Specify the tls secret containing the wildcard domain name certificate. +
      ## You need to prepare certificates and create TLS secrets yourself.
      # secretName: ""
    service:
      type: LoadBalancer

  ## This section configures whether to use an external container image repository.
  registry:
    ## Indicates whether the registry is external (true) or internal (false)
    external: false
    connection: { }
      ## The URL of the Docker registry service; default is Docker Hub
      # repository: "docker.io"
      ## The namespace (or organization) under which the images are stored in the registry
      # namespace: "csghub"
      ## The username for authenticating to the registry
      # username: ""
      ## The password for authenticating to the registry
      # password: ""

  ## This section configures whether to use an external postgresql database.
  postgresql:
    ## Specifies whether to use an external PostgreSQL instance or a built-in one
    external: false
    connection: { }
      ## Host of the PostgreSQL database. Leave empty for built-in PostgreSQL, or provide the external host address.
      # host: ""
      ## Port on which the PostgreSQL database is running. Default is usually 5432.
      # port: ""
      ## Prefix of the database to connect to.
      ## Priority:
      ##       postgresql.database > subChart.postgresql{}
      ## This method will store all metadata data in the same database, which is not recommended,
      ##   as it may cause data table conflicts.
      ## The recommended way is to comment this parameter and use the default database:
      ##   - csghub_portal
      ##   - csghub_server
      ##   - csghub_casdoor
      ##   - csghub_temporal
      ##   - csghub_temporal_visibility
      ## Please make sure that the above databases have been created
      # database: ""
      ## Username for authenticating with the PostgreSQL database.
      # user: ""
      ## Password for the PostgreSQL user specified above.
      # password: ""
      ## Timezone for PostgreSQL
      # timezone: "Asia/Shanghai"

  ## This section configures whether to use an external redis cache.
  redis:
    ## Set to false to use internal Redis service
    external: false
    ## Redis connection configuration
    connection: { }
      ## Host for accessing Redis
      # host: ""
      ## Port for accessing Redis
      # port: ""
      ## Password for accessing Redis
      # password: ""

  ## The following is a unified object storage configuration.
  ## Once configured, the configured object storage is automatically used instead of the built-in minio object storage.
  ## If you use external object storage, make sure the bucket has been created.
  objectStore:
    ## If you use external object storage, set this to true, otherwise set this to false to use built-in object storage.
    external: false
    ## Configuring external object storage
    connection: { }
      ## The endpoint of the object storage service, e.g., S3 compatible service URL
      # endpoint: ""
      ## The access key used for authentication
      # accessKey: ""
      ## The secret key used for authentication
      # accessSecret: ""
      ## The location used for authentication
      # region: "cn-north-1"
      ## Indicates whether to encrypt data in transit
      # encrypt: "true"
      ## Indicates whether to use path-style requests
      # pathStyle: "true"
      ## By default (in the case of comments), the following bucket is used:
      ##   - csghub-portal
      ##   - csghub-server
      ##   - csghub-registry
      ##   - csghub-workflow
      # bucket: ""

  ## This section of configuration is used to integrate k8s to run various instances, +
  ## such as Space applications, fine-tuning, and inference instances.
  deployment:
    ## Enable or disable the deployment of this application.
    enabled: true
    ## Name of the Kubernetes Secret to be used for configuration or credentials.
    kubeSecret: "kube-configs"
    ## Kubernetes namespace where the deployment will be created.
    namespace: "spaces"
    ## csghub uses knative serving to assist in instance construction, |
    ## so if this function is required, you need to configure the following information
    knative:
      serving:
        ## Configuration for Knative serving services.
        services:
          ## Definition of a specific Knative service.
          ## The name of the service.
          - name: example-service-1
            ## The hostname through which the service can be accessed.
            domain: "app.internal"
            ## The IP address assigned to the service.
            host: "192.168.8.3"
            ## The port on which the service is exposed.
            port: "30213"

## In order to make the maintenance of csghub helm easier, the official ingress-nginx is directly referenced here as a subChart.
## This section of configuration is added for better adaptation, but this section of configuration is not within your modification scope.
## Unless you know what you are doing, please do not modify this section of configuration.
## PLEASE DO NOT UPDATE!!!
ingress-nginx:
  ## Enable the NGINX Ingress Controller
  enabled: true
  ## TCP services configuration
  tcp:
    ## Forward TCP traffic on port 22 to the specified service
    22: csghub/csghub-gitlab-shell:22
  ## NGINX Ingress Controller configuration
  controller:
    ## Configuration settings for the Ingress Controller
    config:
      ## Set the risk level for annotations; critical indicates high risk
      annotations-risk-level: Critical
    ## Allow the use of server snippets in annotations
    allowSnippetAnnotations: true
    ## Configuration for the service exposed by the Ingress Controller
    service:
      ## Node ports for HTTP and HTTPS traffic
      nodePorts:
        ## Node port for HTTP traffic
        http: 30080
        ## Node port for HTTPS traffic
        https: 30443
        ## Node port for TCP traffic
        tcp:
          ## Node port for TCP traffic on port 22
          22: 30022